<?php

function _use_admin_theme() {
	return variable_get("admin_theme", "seven");
}

/**
 * Implements hook_menu()
 */
function panels_onepage_menu() {
	$items["node/%node/customize/step/one"] = array(
		'title' => 'Sections',
		'page callback' => 'drupal_get_form',
		'page arguments' => array("panels_onepage_customize_step_one", 1),
		'access arguments' => array("create panel-nodes"),
		'file' => 'includes/panels_onepage_customize_step_one.inc',
		'type' => MENU_LOCAL_TASK,
		'weight' => 10,
		'theme callback' => "_use_admin_theme"
	);

	$items["node/%node/customize/step/two"] = array(
		'title' => 'Sections settings',
		'page callback' => 'drupal_get_form',
		'page arguments' => array("panels_onepage_customize_step_two", 1),
		'access arguments' => array("create panel-nodes"),
		'file' => 'includes/panels_onepage_customize_step_two.inc',
		'type' => MENU_LOCAL_TASK,
		'theme callback' => "_use_admin_theme",
		'weight' => 11
	);

	return $items;
}

/**
 * Implements hook_ctools_plugin_directory()
 */
function panels_onepage_ctools_plugin_directory($owner, $plugin_type) {
	if($owner == "panels" && $plugin_type == "layouts") {
		return "plugins/$plugin_type";
	}
}

/**
 * Implements hook_form_alter()
 */
function panels_onepage_form_alter(&$form, &$form_state, $form_id) {
	// $nid = node_load(arg(1));
	// dsm($nid);
}

/**
 * Implements hook_node_insert()
 */
function panels_onepage_node_insert($node) {
	// redirect to the steps
	$nid = $node->nid;
	drupal_goto("node/$nid/customize/step/one");
}


/**
 * Insert
 */
function panels_onepage_save($nid, $data) {	
	$insert = db_merge("panels_onepage")
		->key(array("nid" => $nid))
		->fields(array(
			'nid' => $nid,
			'data' => serialize($data)
		))
		->execute();

	return $insert;
}


/**
 * Implements hook_node_load()
 */
function panels_onepage_node_load($nodes, $types) {
	foreach($nodes as $node) {
		$nids[] = $node->nid;
	}

	$result = db_select("panels_onepage", "s")
		->fields("s")
		->where("s.nid IN (:nids)", array(":nids" => $nids))
		->execute();

	foreach($result as $record) {
		$nodes[$record->nid]->panels_node["panels_onepage"] = unserialize($record->data);
	}
}


/**
 * Get a row
 */
function panels_onepage_get($nid) {
	$results = db_select("panels_onepage", "s")
		->fields("s")
		->condition("nid", $nid, "=")
		->execute()
		->fetchAssoc();

	return $results;
}

/**
 * Implements hook_block_info()
 */
function panels_onepage_block_info() {
	$blocks = array();

	$blocks["panel-onepage-menu"] = array(
		'info' => t("Panel One Page Menu"),
		'cache' => DRUPAL_CACHE_PER_PAGE
	);

	return $blocks;
}

/**
 * Implements hook_block_view()
 */
function panels_onepage_block_view($delta = "") {
	$block = array();

	switch($delta) {
		case "panel-onepage-menu":
			$node = menu_get_object("node");
			if(isset($node)) {
				$block["subject"] = NULL;
				$block["content"] = array(
					"#theme" => "panels_onepage_panel_menu",
					"#node" => $node,
				);
			}
		break;
	}

	return $block;
}

/**
 * Implements hook_theme()
 */
function panels_onepage_theme() {
	return array(
		"panels_onepage_panel_menu" => array(
			'variables' => array(
				'node' => NULL
			)
		),
	);
}

/**
 * Displays the menu
 */
function theme_panels_onepage_panel_menu($variables) {
	global $base_url;
	$url = request_path();

	$node = $variables["node"];

	$titles = array();
	foreach($node->panels_node["panels_onepage"]["sections"] as $key => $section) {
		if(!empty($section["menu_title"])) {
			$titles[] = array(
				"title" => $section["menu_title"],
				"href" => $url,
				"fragment" => "container-outter-section-" . $key
			);
		}
	}

	// @todo This is temporary
	return '<div class="menu-panel">' . theme("links", array("links" => $titles, "attributes" => array("class" => "nav nav-pills"))). '</div>';
}

/**
 * Preprocess function for custom.tpl.php
 */
function panels_onepage_preprocess_custom(&$variables) {

	$path = drupal_get_path("module", "panels_onepage");
	drupal_add_js($path . "/js/jquery.anystretch.js", "file");

	// Parallax effect / One page scroll
	drupal_add_js($path . "/js/jquery.scrollTo.js", "file");
	drupal_add_js($path . "/js/jquery.nav.js", "file");

	drupal_add_js($path . "/js/panels_onepage.js", "file");

	$variables["node"] = menu_get_object("node");
	$variables["counter"] = 1;
	$variables["sections"] = $variables["node"]->panels_node["panels_onepage"]["sections"];

	foreach($variables["sections"] as $key => $section) {
		$variables["sections"][$key]["style"] = _setStyles($section);
		$variables["sections"][$key]["columns-class"] = _bootstrap_columns($section["cols"]);

		if(isset($section["backgroundImage"])) {
			$file = file_load($section["backgroundImage"]);
			$variables["sections"][$key]["backgroundImage"] = file_create_url($file->uri);
		}
	}
}

/**
 * Convert an amount of columns into bootstrap3 columns classes
 */
function _bootstrap_columns($cols) {
  $width = 12/$cols;
  $arr = array(
    "col-xs-" . $width,
    "col-sm-" . $width,
    "col-md-" . $width,
    "col-lg-" . $width
  );

  return implode(" ", $arr);
}

/**
 * Set inline styles
 * Add background image too
 */
function _setStyles($section) {
  // Default to white
  $color = !empty($section["backgroundColor"]) ? $section["backgroundColor"] : "none";

  // Check if the user entered the color with # or without
  if(strpos($color, "#") === false) {
    $styles = "background-color: #" . $color . ";";
  }
  else {
    $styles = "background-color: " . $color . ";";  
  }

  if(!empty($section["height"])) {
  	$styles .= "min-height: " . $section["height"] . ";";
  }

  return $styles;
}